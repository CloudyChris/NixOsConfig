; â€”â€”â€”â€”â€”â€” CONFIG â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
; â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”

; â€”â€”â€”â€”â€”â€” BARS â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”

(defwidget top_bar [screen]
  (centerbox :orientation "h"
             :class "bar"
    (top_left_box :screen screen)
    (top_center_box :screen screen)
    (top_right_box :screen screen)
  )
)

(defwidget bottom_bar [screen]
  (centerbox :orientation "h"
             :class "bar"
    (bottom_left_box :screen screen)
    (bottom_center_box :screen screen)
    (bottom_right_box :screen screen)
  )
)

; â€”â€”â€”â€”â€”â€” TOP BAR STUFF â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”

(defwidget top_left_box [screen]
  (box :class "top_left_box"
       :orientation "h"
       :space-evenly false
       :halign "start"
       :valign "center"
    (bar_systray :screen screen)
  )
)

(defwidget top_center_box [screen]
  (box :class "top_center_box"
       :orientation "h"
       :space-evenly false
       :halign "center"
       :valign "center"
    (bar_calendar :screen screen)
    (bar_notifications :screen screen)
  )
)

(defwidget top_right_box [screen]
  (box :class "top_right_box"
       :orientation "h"
       :space-evenly false
       :halign "end"
       :valign "center"
    (bar_audio :screen screen)
    (bar_bluetooth :screen screen)
    (bar_network :screen screen)
    (bar_sysmenu :screen screen)
  )
)

; â€”â€”â€”â€”â€”â€” BOTTOM BAR STUFF â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”

(defwidget bottom_left_box [screen]
  (box :class "bottom_left_box"
       :orientation "h"
       :space-evenly false
       :halign "start"
       :valign "center"
    (bar_workspaces :screen screen)
  )
)

(defwidget bottom_center_box [screen]
  (box :class "bottom_center_box"
       :orientation "h"
       :space-evenly false
       :halign "center"
       :valign "center"
    (bar_windows :screen screen)
  )
)

(defwidget bottom_right_box [screen]
  (box :class "bottom_right_box"
       :orientation "h"
       :space-evenly true
       :halign "end"
       :valign "center"
    (bar_clipboard :screen screen)
    (bar_keyboard :screen screen)
  )
)

; â€”â€”â€”â€”â€”â€” WORKSPACES â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”

(defwidget bar_workspaces [screen]
  (box :class "bar-workspaces"
       :orientation "h"
       :space-evenly true
       :halign "start"
       :valign "center"
       :spacing 10
    (workspace :screen screen
               :name 1
    )
    (workspace :screen screen
               :name 2
    )
    (workspace :screen screen
               :name 3
    )
    (workspace :screen screen
               :name 4
    )
    (workspace :screen screen
               :name 5
    )
  )
)

(defwidget workspace [screen name]
  (button :class "workspace"
          :onclick "i3-msg \"workspace ${screen}:${name}\""
          "${name}"
  )
)

; â€”â€”â€”â€”â€”â€” WINDOWS â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”

(defwidget bar_windows
  (button :class "bar-windows"
          :onclick "rofi_windows"
  )
)

; â€”â€”â€”â€”â€”â€” CALENDAR / TIME â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”

(defpoll time_full :interval "30s"
  "date '+%H:%M %d/%m/%Y'"
)

(defpoll time_day :interval "1h"
  "date '%d'"
)


(defpoll time_month :interval "1h"
  "date '%m'"
)

(defpoll time_year :interval "1h"
  "date '%Y'"
)

(defwidget bar_calendar [screen]
  (button :class "bar-calendar"
          :onclick "eww open pop_calendar_${screen}"
    (box :class "bar-calendar-content"
         :orientation "h"
         :space-evenly false
         :halign "center"
         :valign "center"
    time_full
    )
  )
)

(defwidget pop_calendar
  (box :class "pop-calendar"
       :orientation "v"
       :space-evenly false
       :halign "center"
       :valign "center"
    (calendar :class "pop-calendar-calendar"
              :day time_day
              :month time_month
              :year time_year
              :show-details false
              :show-heading true
              :show-dat-names true
              :show-week-numbers true
    )
  )
)

; â€”â€”â€”â€”â€”â€” AUDIO - BAR + POPUP â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”

(defpoll volume :interval "1m"
  `get_volume`
)

(defwidget bar_audio [screen]
  (button :class "bar-audio"
          :onclick "eww open pop_audio_${screen}"
    (box :class "bar-audio-content"
         :orientation "h"
         :space-evenly false
         :halign "center"
         :valign "center"
      (box :class "bar-audio-label"
           :orientation "h"
           :halign "start"
           :valign "center"
        "${volume == 0 ? "ðŸ”‡" : {volume < 30 ? "ðŸ”ˆ" : {volume < 60 ? "ðŸ”‰" : "ðŸ”Š"}}}"
      )
      (scale :class "bar-audio-scale"
             :halign "end"
             :valign "center"
             :min 0
             :max 101
             :active true
             :value volume
             :onchange "pactl set-sink-volume @DEFAULT_SINK@ {}%"
      )
    )
  )
)

(defpoll audio_sinks :interval "5m"
  `evil_gen_audio_sinks_eww`
)

(defpoll audio_sources :interval "5m"
  `evil_gen_audio_sources_eww`
)

(defwidget pop_audio
  (box :class "pop_audio"
       :orientation "v"
       :space-evenly false
       :halign "center"
       :valign "start"
    (box :class "pop_audio_sinks"
         :orientation "v"
         :space-evenly true
         :halign "center"
         :valign "start"
      (literal :content audio_sinks)
    )
    (box :class "pop_audio_sources"
         :orientation "v"
         :space-evenly true
         :halign "center"
         :valign "start"
      (literal :content audio_sources)
    )
  )
)

